package fiap.sd.udp.simplechatudp.sender;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

import fiap.sd.udp.chat.Mensagem;

/**
 * Implementa o lado "Falador" de nosso chat UDP simples
 * @author fm
 *
 */
public class Sender extends Thread {
	private DatagramSocket speakSocket;
	private static final BufferedReader console = new BufferedReader(new InputStreamReader(
			System.in));

	public Sender(String destAddr, int destPort) {
		try {
			this.speakSocket = new DatagramSocket();
			this.destAddress = InetAddress.getByName(destAddr);
			this.destPort = destPort;
			System.out.println("** Preparando para enviar mensagens para "
					+ this.destAddress + ":" + this.destPort);
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(-1);
		}
	}

//	public void run() {
//		String message = null;
//		while (speakSocket != null) {
//			try {
//				message = readMessage();
//			} catch (IOException e) {
//				System.out.println("Erro na entrada do teclado.");
//				e.printStackTrace();
//				System.exit(-1);
//			}
//			sendMessage(message);
//		}
//	}

	private String readMessage() throws IOException {
		System.out.print("Mensagem a ser enviada > ");
		return console.readLine();
	}

	public static synchronized void enviarMensagem(Mensagem msg) {
		DatagramPacket packet = new DatagramPacket(msg.mensagem.getBytes(),
				msg.mensagem.length(), msg.destAddress, msg.destPort);
		try {
			speakSocket.send(packet);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
